---
import { storyblokEditable } from '@storyblok/astro'

const { blok } = Astro.props

// Funzione per determinare se il link è interno
function isInternalLink(url) {
  return url && (url.startsWith('/') || !url.includes('http'));
}

// Normalizza il link in base a se è interno o esterno
const linkUrl = blok.link.cached_url || '/';
const isInternal = isInternalLink(linkUrl);
---

<div
  {...storyblokEditable(blok)}
  class="w-full bg-[#f7f6fd] rounded-[5px] text-center overflow-hidden"
>
  {isInternal ? (
    <a href={`/${linkUrl}`} target="_self">
      <img
        src={blok.image.filename}
        alt={blok.image.alt}
        class="w-full h-48 xl:h-72 object-cover"
      />
      <div class="px-12 py-6">
        <h3 class="text-2xl text-[#1d243d] font-bold">
          {blok.name}
        </h3>
      </div>
    </a>
  ) : (
    <a href={blok.link.url} target="_blank" rel="noopener noreferrer">
      <img
        src={blok.image.filename}
        alt={blok.image.alt}
        class="w-full h-48 xl:h-72 object-cover"
      />
      <div class="px-12 py-6">
        <h3 class="text-2xl text-[#1d243d] font-bold">
          {blok.name}
        </h3>
      </div>
    </a>
  )}
</div>
