---
import { useStoryblokApi } from '@storyblok/astro';
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get('cdn/stories/config', {
  version: 'draft',
  resolve_links: 'url',
});
const headerMenu = data?.story?.content?.header_menu;
---

<header class="w-full h-24 px-4 lg:px-8 relative">
  <div class="container h-full mx-auto flex items-center justify-between">
    <!-- Logo -->
    <a href="/">
      <h1 class="text-[#50b0ae] text-3xl font-bold">Milfoski</h1>
    </a>

    <!-- Mobile cart and hamburger -->
    <div class="flex lg:hidden items-center space-x-4 relative">
      <button id="cart-button" class="snipcart-checkout relative disabled" disabled>
        <!-- Updated Cart Icon (shopping bag) -->
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 transition-colors duration-300 text-gray-400 hover:text-[#50b0ae]" fill="none" viewBox="0 0 64 64" stroke="currentColor">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M51.714 20.47L55 60H9l3.286-39.53h9.857v-6.588C22.143 8.424 26.556 4 32 4c5.444 0 9.857 4.424 9.857 9.882v6.589h9.857zM25.43 13.883v16.47h-3.286v-6.587H15.31l-2.737 32.94h38.856l-2.737-32.94h-6.834v6.588h-3.286v-16.47c0-3.634-2.947-6.589-6.571-6.589-3.624 0-6.571 2.955-6.571 6.588zm3.285 9.883V20.47h6.572v3.294h-6.572z" fill="currentColor"></path>
        </svg>
        <!-- Badge for item count -->
        <span id="cart-badge" class="hidden absolute -top-2 -right-2 bg-red-600 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center"></span>
      </button>

      <!-- Hamburger Icon -->
      <button id="hamburger" class="lg:hidden w-7 h-auto flex flex-col relative">
        <span id="line1" class="w-6 h-0.5 rounded-full bg-black transition-all duration-300 ease-linear"></span>
        <span id="line2" class="w-6 origin-center mt-1 h-0.5 rounded-full bg-black transition-all duration-300 ease-linear"></span>
        <span id="line3" class="w-6 mt-1 h-0.5 rounded-full bg-black transition-all duration-300 ease-linear"></span>
        <span class="sr-only">Toggle navigation</span>
      </button>
    </div>

    <!-- Desktop menu -->
    <nav class="hidden lg:flex items-center space-x-8 text-lg font-bold">
      <ul class="flex space-x-8">
        {
          headerMenu.map((menu) => (
            <li>
              <a href={`/${menu.link.cached_url}`} class="text-black hover:text-[#50b0ae]">
                {menu.link.story.name}
              </a>
            </li>
          ))
        }
      </ul>
      <!-- Cart Button for Desktop -->
      <button id="cart-button-desktop" class="snipcart-checkout relative disabled" disabled>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 transition-colors duration-300 text-gray-400 hover:text-[#50b0ae]" fill="none" viewBox="0 0 64 64" stroke="currentColor">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M51.714 20.47L55 60H9l3.286-39.53h9.857v-6.588C22.143 8.424 26.556 4 32 4c5.444 0 9.857 4.424 9.857 9.882v6.589h9.857zM25.43 13.883v16.47h-3.286v-6.587H15.31l-2.737 32.94h38.856l-2.737-32.94h-6.834v6.588h-3.286v-16.47c0-3.634-2.947-6.589-6.571-6.589-3.624 0-6.571 2.955-6.571 6.588zm3.285 9.883V20.47h6.572v3.294h-6.572z" fill="currentColor"></path>
        </svg>
        <!-- Badge for item count -->
        <span id="cart-badge-desktop" class="hidden absolute -top-2 -right-2 bg-red-600 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center"></span>
      </button>
    </nav>

    <!-- Mobile Menu (hidden by default) -->
    <div id="mobile-menu" class="transform -translate-x-full fixed top-0 left-0 w-64 bg-[#f7f6fd] h-full z-50 shadow-lg transition-transform duration-300">
      <div class="p-6 pt-12">
        <!-- SVG placeholder, caricato solo quando necessario -->
        <img id="milfoski-svg" 
     data-src="https://a.storyblok.com/f/297215/212x259/fcf5838be0/milfoski-nav0.svg" 
     alt="Milfoski Face" 
     class="w-full mb-4 lazyload" 
     width="212" 
     height="259">

        <ul class="space-y-4 text-lg font-bold text-center">
          {
            headerMenu.map((menu) => (
              <li>
                <a href={`/${menu.link.cached_url}`} class="hover:text-[#50b0ae]">
                  {menu.link.story.name}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const hamburger = document.getElementById('hamburger');
    const mobileMenu = document.getElementById('mobile-menu');
    const svgContainer = document.getElementById('milfoski-svg') as HTMLImageElement;
    const cartButtons = document.querySelectorAll<HTMLButtonElement>('.snipcart-checkout');
    const cartBadge = document.getElementById('cart-badge');
    const cartBadgeDesktop = document.getElementById('cart-badge-desktop');
    const navLinks = document.querySelectorAll<HTMLAnchorElement>('#mobile-menu ul li a');

    let menuOpen = false;
    let snipcartCSSLoaded = false;

    // URLs degli SVG per le diverse voci di menu
    const svgUrls = [
      'https://a.storyblok.com/f/297215/212x259/fcf5838be0/milfoski-nav0.svg',
      'https://a.storyblok.com/f/297215/212x265/9275b49a10/milfoski-nav1.svg',
      'https://a.storyblok.com/f/297215/212x272/63ae304c01/milfoski-nav2.svg',
      'https://a.storyblok.com/f/297215/212x259/0d84069775/milfoski-nav3.svg'
    ];

    // Lazy load SVG when the menu is opened
    function lazyLoadSVG() {
      if (svgContainer.dataset.src) {
        svgContainer.src = svgContainer.dataset.src;
        svgContainer.removeAttribute('data-src');
      }
    }

    // Toggle menu and animate hamburger icon
    hamburger?.addEventListener('click', function () {
      menuOpen = !menuOpen;
      if (menuOpen) {
        mobileMenu.classList.remove('-translate-x-full');
        mobileMenu.classList.add('translate-x-0');
        lazyLoadSVG(); // Carica l'SVG quando il menu è aperto
      } else {
        mobileMenu.classList.remove('translate-x-0');
        mobileMenu.classList.add('-translate-x-full');
      }

      const line1 = document.getElementById('line1');
      const line2 = document.getElementById('line2');
      const line3 = document.getElementById('line3');

      if (menuOpen) {
        line1.style.transform = 'rotate(45deg) translateY(8px)';
        line2.style.opacity = '0';
        line3.style.transform = 'rotate(-45deg) translateY(-8px)';
      } else {
        line1.style.transform = '';
        line2.style.opacity = '1';
        line3.style.transform = '';
      }
    });

    // Carica dinamicamente il CSS di Snipcart al primo clic sul pulsante del carrello
    function loadSnipcartCSS() {
      if (!snipcartCSSLoaded) {
        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = 'https://cdn.snipcart.com/themes/v3.2.1/default/snipcart.css';
        link.id = 'snipcart-css';
        document.head.appendChild(link);
        snipcartCSSLoaded = true;
      }
    }

    // Funzione per aprire Snipcart
    function openSnipcartCart() {
      if (window.Snipcart?.api?.modal) {
        window.Snipcart.api.modal.show();
      } else {
        setTimeout(openSnipcartCart, 500);
      }
    }

    // Gestione click sui pulsanti del carrello
    function handleCartButtonClick() {
      loadSnipcartCSS(); // Carica il CSS di Snipcart al clic
      openSnipcartCart(); // Apre il carrello
    }

    // Funzione per abilitare i pulsanti del carrello
    function enableCartButtons() {
      cartButtons.forEach(button => {
        button.disabled = false;
        button.classList.add('enabled');
        button.classList.remove('disabled');
        button.querySelector('svg')?.classList.remove('text-gray-400');
        button.querySelector('svg')?.classList.add('text-black');
        button.addEventListener('click', handleCartButtonClick);
      });
    }

    // Funzione per disabilitare i pulsanti del carrello
    function disableCartButtons() {
      cartButtons.forEach(button => {
        button.disabled = true;
        button.classList.add('disabled');
        button.classList.remove('enabled');
        button.querySelector('svg')?.classList.add('text-gray-400');
        button.querySelector('svg')?.classList.remove('text-black');
        button.removeEventListener('click', handleCartButtonClick);
      });
    }

    // Funzione per aggiornare il conteggio del badge
    function updateCartCount() {
      const cartItems = window.Snipcart.store.getState().cart.items.count;

      if (cartItems > 0) {
        [cartBadge, cartBadgeDesktop].forEach(badge => {
          if (badge) {
            badge.style.display = 'flex';
            badge.textContent = cartItems.toString();
          }
        });
      } else {
        [cartBadge, cartBadgeDesktop].forEach(badge => {
          if (badge) {
            badge.style.display = 'none';
          }
        });
      }
    }

    // Inizializza Snipcart quando è pronto
    document.addEventListener('snipcart.ready', () => {
      enableCartButtons();
      updateCartCount();
      window.Snipcart.store.subscribe(updateCartCount); // Aggiorna il badge quando il carrello cambia
    });

    // Disabilita i pulsanti del carrello all'inizio
    disableCartButtons();

    // Gestione hover e click per cambiare SVG di Milfoski nel mobile menu
    navLinks.forEach((link, index) => {
      link.addEventListener('click', (event) => {
        event.preventDefault();  // Blocca il comportamento predefinito del link

        // Cambia SVG
        svgContainer.src = svgUrls[index + 1];

        // Timeout di fallback
        const fallbackTimeout = setTimeout(() => {
          window.location.href = link.href;  // Redirect se il caricamento è troppo lento
        }, 250);

        // Aspetta che l'SVG si carichi
        svgContainer.onload = function () {
          clearTimeout(fallbackTimeout);
          window.location.href = link.href;  // Esegui il redirect dopo il caricamento
        };
      });
    });
  });
</script>


<style>
  #mobile-menu {
    transition: transform 0.3s ease-in-out;
  }

  #cart-badge, #cart-badge-desktop {
    position: absolute;
    top: -8px;
    right: -8px;
    background-color: #e3342f;
    color: white;
    font-size: 0.75rem;
    font-weight: bold;
    width: 20px;
    height: 20px;
    display: none; /* Il badge è nascosto di default */
    align-items: center;
    justify-content: center;
    border-radius: 9999px;
    pointer-events: none;
  }

  #milfoski-svg-container {
    width: 100%;
    text-align: center;
  }

  #milfoski-svg {
    width: 100%;
  }

  /* Stile per pulsanti disabilitati */
  button.disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  button.disabled:hover {
    color: inherit; /* Nessun effetto hover quando disabilitato */
  }

  /* Stile quando i pulsanti sono abilitati */
  button.enabled {
    cursor: pointer;
    opacity: 1;
  }

  /* Assicurati che l'icona del carrello sia inizialmente nera */
  .snipcart-checkout svg {
    transition: fill 0.3s ease-in-out;
    fill: black; /* Icona di default nera */
  }

  /* Effetto hover per l'icona del carrello abilitata */
  .snipcart-checkout:hover svg {
    fill: #50b0ae !important; /* Colore di hover verde acqua */
  }

  /* Hover per le voci di menu */
  nav a:hover {
    color: #50b0ae;
  }
</style>
